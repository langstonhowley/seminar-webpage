[{"/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/index.js":"1","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/reportWebVitals.js":"2","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/App.js":"3","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/TopNavBar.js":"4","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/BgVideo.js":"5","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/MapChart.js":"6"},{"size":539,"mtime":1635793338833,"results":"7","hashOfConfig":"8"},{"size":354,"mtime":1635537171662,"results":"9","hashOfConfig":"8"},{"size":668,"mtime":1635537171106,"results":"10","hashOfConfig":"8"},{"size":1374,"mtime":1635537171109,"results":"11","hashOfConfig":"8"},{"size":225,"mtime":1635537171108,"results":"12","hashOfConfig":"8"},{"size":10721,"mtime":1635537171109,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w0ambq",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/index.js",[],"/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/reportWebVitals.js",[],"/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/App.js",["30","31","32"],"import logo from './logo.svg'\nimport './App.css'\nimport TopNavBar from './components/TopNavBar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport MapChart from './components/MapChart'\nimport BgVideo from './components/BgVideo'\n\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactTooltip from 'react-tooltip'\n\nimport './App.css'\n\nfunction App () {\n  const [content, setContent] = useState('')\n  return (\n    <div className='App'>\n      <TopNavBar />\n      <div id='map'>\n        <MapChart setTooltipContent={setContent} />\n        <ReactTooltip html={true}>{content}</ReactTooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/TopNavBar.js",["33","34","35","36","37","38","39","40"],"import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from 'react-router-dom'\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button\n} from 'react-bootstrap'\nimport { Container } from 'react-bootstrap'\nimport VideoBg from 'reactjs-videobg'\nimport bgvideo from './video.mp4'\nimport '../App.css'\n\nclass TopNavBar extends React.Component {\n  render () {\n    return (\n      <div class='header-nav'>\n        <div class='container-fluid'>\n          <div class='navbar transparent navbar-inverse navbar-fixed-top'>\n            <Navbar bg='dark' variant='dark' fixed='top'>\n              <Container>\n                <Navbar.Brand href='#home'>Habitat Loss</Navbar.Brand>\n                <Nav>\n                  <Nav.Link href='#home'>Map</Nav.Link>\n                  <Nav.Link href='#features'>Visualizations</Nav.Link>\n                  <Nav.Link href='#pricing'>Deets</Nav.Link>\n                </Nav>\n              </Container>\n            </Navbar>\n          </div>\n        </div>\n        <div class='container-fluid'>\n          <VideoBg>\n            <VideoBg.Source src={bgvideo} type='video/ogg' />\n          </VideoBg>\n        </div>\n        <div className='bgoverlay'>\n          <div className='form'>\n            <h1>Sup Dawg</h1>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TopNavBar\n","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/BgVideo.js",["41","42"],"import React from 'react'\nimport VideoBg from 'reactjs-videobg'\nimport bgvideo from './video.mp4'\n\nclass BgVideo extends React.Component {\n  render () {\n    return <div class='header-nav'></div>\n  }\n}\n\nexport default BgVideo\n","/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/MapChart.js",["43","44","45"],"import React, { useState, useEffect, memo } from 'react'\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography\n} from 'react-simple-maps'\nimport { csv } from 'd3-fetch'\nimport Box from '@mui/material/Box'\nimport Slider from '@mui/material/Slider'\n\nconst geoUrl =\n  'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json'\n\nconst marks = [\n  {\n    value: 10,\n    label: '1990'\n  },\n  {\n    value: 40,\n    label: '2000'\n  },\n  {\n    value: 70,\n    label: '2010'\n  },\n  {\n    value: 85,\n    label: '2015'\n  },\n  {\n    value: 100,\n    label: '2020'\n  }\n]\n\nfunction valuetext (value) {\n  return `${value}`\n}\n\nfunction valueLabelFormat (value) {\n  return marks.findIndex(mark => mark.value === value) + 1\n}\n\nconst MapChart = ({ setTooltipContent }) => {\n  const [deforestation, setDeforestation] = useState([])\n  const [estimates, setEstimates] = useState([])\n  const [animals, setAnimals] = useState([])\n  const [plants, setPlants] = useState([])\n  const [fungi, setFungi] = useState([])\n  const [chromists, setChromists] = useState([])\n  const [year, setYear] = useState([`2020`])\n\n  useEffect(() => {\n    csv('/annual-change-forest-area.csv').then(deforestation => {\n      setDeforestation(deforestation)\n    })\n    csv('/living-planet-index-by-region.csv').then(estimates => {\n      setEstimates(estimates)\n    })\n    csv('/redlist-animals-by-country.csv').then(animals => {\n      setAnimals(animals)\n    })\n    csv('/redlist-plants-by-country.csv').then(plants => {\n      setPlants(plants)\n    })\n    csv('/redlist-fungi-by-country.csv').then(fungi => {\n      setFungi(fungi)\n    })\n    csv('/redlist-chromists-by-country.csv').then(chromists => {\n      setChromists(chromists)\n    })\n  }, [])\n\n  return (\n    <>\n      <ComposableMap data-tip='' projectionConfig={{ scale: 150 }}>\n        <ZoomableGroup\n          translateExtent={[\n            [-75, 30],\n            [950, 600]\n          ]}\n        >\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => {\n                const def = deforestation.find(\n                  s => s.ISO3 === geo.properties.ISO_A3 && s.Year == year\n                )\n                const est = estimates.find(\n                  s => s.Region === geo.properties.CONTINENT\n                )\n                const animal = animals.find(s => s.Name === geo.properties.NAME)\n                const plant = plants.find(s => s.Name === geo.properties.NAME)\n                const fungus = fungi.find(s => s.Name === geo.properties.NAME)\n                const chromist = chromists.find(\n                  s => s.Name === geo.properties.NAME\n                )\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      const { NAME } = geo.properties\n                      def && est && animal && plant && fungus && chromist\n                        ? setTooltipContent(\n                            `${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` +\n                              (parseInt(animal['Subtotal-(EX+EW)']) +\n                                parseInt(plant['Subtotal-(EX+EW)']) +\n                                parseInt(fungus['Subtotal-(EX+EW)']) +\n                                parseInt(chromist['Subtotal-(EX+EW)'])) +\n                              `<br />\n                                                                      Endangered Species: ` +\n                              (parseInt(animal['Subtotal(threatened spp.)']) +\n                                parseInt(plant['Subtotal(threatened spp.)']) +\n                                parseInt(fungus['Subtotal(threatened spp.)']) +\n                                parseInt(\n                                  chromist['Subtotal(threatened spp.)']\n                                ) -\n                                (parseInt(animal['Subtotal-(EX+EW)']) +\n                                  parseInt(plant['Subtotal-(EX+EW)']) +\n                                  parseInt(fungus['Subtotal-(EX+EW)']) +\n                                  parseInt(chromist['Subtotal-(EX+EW)']))) +\n                              `<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                                      Deforestation: ${def['Net-forest-conversion']} hectares\n                                                `\n                          )\n                        : !def &&\n                          est &&\n                          animal &&\n                          plant &&\n                          fungus &&\n                          chromist &&\n                          est['Percent'] != `N/A`\n                        ? setTooltipContent(\n                            `${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` +\n                              (parseInt(animal['Subtotal-(EX+EW)']) +\n                                parseInt(plant['Subtotal-(EX+EW)']) +\n                                parseInt(fungus['Subtotal-(EX+EW)']) +\n                                parseInt(chromist['Subtotal-(EX+EW)'])) +\n                              `<br />\n                                                                      Endangered Species: ` +\n                              (parseInt(animal['Subtotal(threatened spp.)']) +\n                                parseInt(plant['Subtotal(threatened spp.)']) +\n                                parseInt(fungus['Subtotal(threatened spp.)']) +\n                                parseInt(\n                                  chromist['Subtotal(threatened spp.)']\n                                ) -\n                                (parseInt(animal['Subtotal-(EX+EW)']) +\n                                  parseInt(plant['Subtotal-(EX+EW)']) +\n                                  parseInt(fungus['Subtotal-(EX+EW)']) +\n                                  parseInt(chromist['Subtotal-(EX+EW)']))) +\n                              `<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                `\n                          )\n                        : !def && est && animal && plant && fungus && chromist\n                        ? setTooltipContent(\n                            `${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` +\n                              (parseInt(animal['Subtotal-(EX+EW)']) +\n                                parseInt(plant['Subtotal-(EX+EW)']) +\n                                parseInt(fungus['Subtotal-(EX+EW)']) +\n                                parseInt(chromist['Subtotal-(EX+EW)'])) +\n                              `<br />\n                                                                      Endangered Species: ` +\n                              (parseInt(animal['Subtotal(threatened spp.)']) +\n                                parseInt(plant['Subtotal(threatened spp.)']) +\n                                parseInt(fungus['Subtotal(threatened spp.)']) +\n                                parseInt(\n                                  chromist['Subtotal(threatened spp.)']\n                                ) -\n                                (parseInt(animal['Subtotal-(EX+EW)']) +\n                                  parseInt(plant['Subtotal-(EX+EW)']) +\n                                  parseInt(fungus['Subtotal-(EX+EW)']) +\n                                  parseInt(chromist['Subtotal-(EX+EW)']))) +\n                              `<br />\n                                                `\n                          )\n                        : def && est\n                        ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                                      Deforestation: ${def['Net-forest-conversion']} hectares\n                                                `)\n                        : !def && est && est['Percent'] == `N/A`\n                        ? setTooltipContent(\n                            `\n                                                                      No data found for ${NAME} in ` +\n                              year\n                          )\n                        : !def && est\n                        ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}\n                                                `)\n                        : setTooltipContent(\n                            `No Data Found for ${NAME} in ` + year\n                          )\n                    }}\n                    onMouseLeave={() => {\n                      setTooltipContent('')\n                    }}\n                    style={{\n                      default: {\n                        fill: '#D6D6DA',\n                        outline: '#000000'\n                      },\n                      hover: {\n                        fill: '#F53',\n                        outline: '#000000'\n                      },\n                      pressed: {\n                        fill: '#E42',\n                        outline: '#000000'\n                      }\n                    }}\n                  />\n                )\n              })\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n      <Box sx={({ width: 750 }, { ml: 10 })}>\n        <Slider\n          onChange={(event, value) => setYear((value - 10) / 3 + 1990)}\n          track={false}\n          aria-label='Restricted values'\n          defaultValue={100}\n          valueLabelFormat={valueLabelFormat}\n          getAriaValueText={valuetext}\n          step={null}\n          marks={marks}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default memo(MapChart)\n",{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":15},{"ruleId":"46","severity":1,"message":"51","line":9,"column":8,"nodeType":"48","messageId":"49","endLine":9,"endColumn":16},{"ruleId":"46","severity":1,"message":"52","line":3,"column":20,"nodeType":"48","messageId":"49","endLine":3,"endColumn":26},{"ruleId":"46","severity":1,"message":"53","line":4,"column":3,"nodeType":"48","messageId":"49","endLine":4,"endColumn":9},{"ruleId":"46","severity":1,"message":"54","line":5,"column":3,"nodeType":"48","messageId":"49","endLine":5,"endColumn":8},{"ruleId":"46","severity":1,"message":"55","line":6,"column":3,"nodeType":"48","messageId":"49","endLine":6,"endColumn":12},{"ruleId":"46","severity":1,"message":"56","line":11,"column":3,"nodeType":"48","messageId":"49","endLine":11,"endColumn":14},{"ruleId":"46","severity":1,"message":"57","line":12,"column":3,"nodeType":"48","messageId":"49","endLine":12,"endColumn":7},{"ruleId":"46","severity":1,"message":"58","line":13,"column":3,"nodeType":"48","messageId":"49","endLine":13,"endColumn":14},{"ruleId":"46","severity":1,"message":"59","line":14,"column":3,"nodeType":"48","messageId":"49","endLine":14,"endColumn":9},{"ruleId":"46","severity":1,"message":"60","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":15},{"ruleId":"46","severity":1,"message":"61","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":89,"column":67,"nodeType":"64","messageId":"65","endLine":89,"endColumn":69},{"ruleId":"62","severity":1,"message":"66","line":138,"column":42,"nodeType":"64","messageId":"65","endLine":138,"endColumn":44},{"ruleId":"62","severity":1,"message":"63","line":193,"column":57,"nodeType":"64","messageId":"65","endLine":193,"endColumn":59},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BgVideo' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'VideoBg' is defined but never used.","'bgvideo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]