{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronan\\\\Source\\\\Repos\\\\seminar-webpage\\\\src\\\\MapChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { styled } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst marks = [{\n  value: 10,\n  label: '1990'\n}, {\n  value: 40,\n  label: '2000'\n}, {\n  value: 70,\n  label: '2010'\n}, {\n  value: 85,\n  label: '2015'\n}, {\n  value: 100,\n  label: '2020'\n}];\n\nfunction valuetext(label) {\n  return label;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  _s();\n\n  const [forestData, setForestData] = useState([]);\n  const [estimates, setEstimates] = useState([]);\n  const [animals, setAnimals] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [fungi, setFungi] = useState([]);\n  const [chromists, setChromists] = useState([]);\n  const [year, setYear] = useState([`2020`]);\n  useEffect(() => {\n    csv(`/annual-change-forest-area.csv`).then(forestData => {\n      setForestData(forestData);\n    });\n    csv(`/living-planet-index-by-region.csv`).then(estimates => {\n      setEstimates(estimates);\n    });\n    csv(`/redlist-animals-by-country.csv`).then(animals => {\n      setAnimals(animals);\n    });\n    csv(`/redlist-plants-by-country.csv`).then(plants => {\n      setPlants(plants);\n    });\n    csv(`/redlist-fungi-by-country.csv`).then(fungi => {\n      setFungi(fungi);\n    });\n    csv(`/redlist-chromists-by-country.csv`).then(chromists => {\n      setChromists(chromists);\n    });\n  }, []);\n\n  const handleChange = (event, newValue) => {\n    setYear((newValue - 10) / 3 + 1990);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projectionConfig: {\n        scale: 200\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            const deforestation = forestData.find(s => s.ISO3 === geo.properties.ISO_A3 && s.Year === year.toString());\n            const est = estimates.find(s => s.Region === geo.properties.CONTINENT);\n            const animalRedlist = animals.find(s => s.Name === geo.properties.NAME);\n            const plantRedlist = plants.find(s => s.Name === geo.properties.NAME);\n            const fungusRedlist = fungi.find(s => s.Name === geo.properties.NAME);\n            const chromistRedlist = chromists.find(s => s.Name === geo.properties.NAME);\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              onMouseEnter: () => {\n                const {\n                  NAME\n                } = geo.properties;\n                deforestation && est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist ? setTooltipContent(`${NAME}<br />\n                                                                         ------------<br />\n                                                                         Species lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\n                                                                         Species endangered: ` + (parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"]) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />\n                                                                         Forest loss: ${deforestation[\"Net-forest-conversion\"]} hectares in ` + year) : !deforestation && est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist ? setTooltipContent(`${NAME}<br />\n                                                                         ------------<br />\n                                                                         Sepcies lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\n                                                                         Species endangered: ` + (parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"]) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />                                                                      \n                                                                         Forest loss: No data for ` + year) : !deforestation && !est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist ? setTooltipContent(`${NAME}<br />\n                                                                         ------------<br />\n                                                                         Sepcies lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\n                                                                         Species endangered: ` + (parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"]) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />                                                                      \n                                                                         Forest loss: No data for ` + year) : !deforestation && !est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist ? setTooltipContent(`${NAME}<br />\n                                                                         ------------<br />\n                                                                         Sepcies lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\n                                                                         Species endangered: ` + (parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"]) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />                                                                      \n                                                                         Forest loss: No data for ` + year) : deforestation && year.toString() === `2020` ? setTooltipContent(`${NAME}<br />\n                                                                         ------------<br />\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />\n                                                                         Forest loss: ${deforestation[\"Net-forest-conversion\"]} hectares in ` + year) : !deforestation && year.toString() === `2020` ? setTooltipContent(`${NAME}<br />\n                                                                         ------------<br />\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />\n                                                                         Forest loss: No data for ` + year) : deforestation && year.toString() !== `2020` ? setTooltipContent(`${NAME}<br />\n                                                                         ------------<br />\n                                                                         Biodiversity loss: No biodiversity data for ` + year + ` <br />\n                                                                         Forest loss: ${deforestation[\"Net-forest-conversion\"]} hectares`) : setTooltipContent(`No data found for ${NAME} in ` + year);\n              },\n              onMouseLeave: () => {\n                setTooltipContent(\"\");\n              },\n              style: {\n                default: {\n                  fill: \"#D6D6DA\",\n                  outline: \"#000000\"\n                },\n                hover: {\n                  fill: \"#F53\",\n                  outline: \"#000000\"\n                },\n                pressed: {\n                  fill: \"#E42\",\n                  outline: \"#000000\"\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: ({\n        width: 1000\n      }, {\n        ml: 10\n      }),\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        onChange: handleChange,\n        track: false,\n        \"aria-label\": \"Restricted values\",\n        defaultValue: 100,\n        valueLabelFormat: valueLabelFormat,\n        getAriaValueText: valuetext,\n        step: null,\n        marks: marks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapChart, \"ZahhWPhZ8OBgxK7L0BwAzB7+WJg=\");\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ronan/Source/Repos/seminar-webpage/src/MapChart.js"],"names":["React","memo","useEffect","useState","csv","ZoomableGroup","ComposableMap","Geographies","Geography","styled","Slider","Box","geoUrl","marks","value","label","valuetext","valueLabelFormat","findIndex","mark","MapChart","setTooltipContent","forestData","setForestData","estimates","setEstimates","animals","setAnimals","plants","setPlants","fungi","setFungi","chromists","setChromists","year","setYear","then","handleChange","event","newValue","scale","geographies","map","geo","deforestation","find","s","ISO3","properties","ISO_A3","Year","toString","est","Region","CONTINENT","animalRedlist","Name","NAME","plantRedlist","fungusRedlist","chromistRedlist","parseInt","default","fill","outline","hover","pressed","rsmKey","width","ml"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport {\r\n    ZoomableGroup,\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography\r\n} from \"react-simple-maps\";\r\nimport { styled } from '@mui/material/styles';\r\nimport Slider from '@mui/material/Slider';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst geoUrl =\r\n    \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst marks = [\r\n    {\r\n        value: 10,\r\n        label: '1990',\r\n    },\r\n    {\r\n        value: 40,\r\n        label: '2000',\r\n    },\r\n    {\r\n        value: 70,\r\n        label: '2010',\r\n    },\r\n    {\r\n        value: 85,\r\n        label: '2015',\r\n    },\r\n    {\r\n        value: 100,\r\n        label: '2020',\r\n    },\r\n];\r\n\r\nfunction valuetext(label) {\r\n    return label;\r\n}\r\n\r\nfunction valueLabelFormat(value) {\r\n    return marks.findIndex((mark) => mark.value === value) + 1;\r\n}\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n\r\n    const [forestData, setForestData] = useState([]);\r\n    const [estimates, setEstimates] = useState([]);\r\n    const [animals, setAnimals] = useState([]);\r\n    const [plants, setPlants] = useState([]);\r\n    const [fungi, setFungi] = useState([]);\r\n    const [chromists, setChromists] = useState([]);\r\n    const [year, setYear] = useState([`2020`]);\r\n\r\n    useEffect(() => {\r\n        csv(`/annual-change-forest-area.csv`).then((forestData) => {\r\n            setForestData(forestData);\r\n        });\r\n        csv(`/living-planet-index-by-region.csv`).then((estimates) => {\r\n            setEstimates(estimates);\r\n        });\r\n        csv(`/redlist-animals-by-country.csv`).then((animals) => {\r\n            setAnimals(animals);\r\n        });\r\n        csv(`/redlist-plants-by-country.csv`).then((plants) => {\r\n            setPlants(plants);\r\n        });\r\n        csv(`/redlist-fungi-by-country.csv`).then((fungi) => {\r\n            setFungi(fungi);\r\n        });\r\n        csv(`/redlist-chromists-by-country.csv`).then((chromists) => {\r\n            setChromists(chromists);\r\n        });\r\n    },\r\n        []);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setYear((((newValue - 10) / 3) + 1990));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n                <ZoomableGroup>\r\n                    <Geographies geography={geoUrl}>\r\n                        {({ geographies }) =>\r\n                            geographies.map((geo) => {\r\n                                const deforestation = forestData.find((s) => s.ISO3 === geo.properties.ISO_A3 && s.Year === year.toString());\r\n                                const est = estimates.find((s) => s.Region === geo.properties.CONTINENT);\r\n                                const animalRedlist = animals.find((s) => s.Name === geo.properties.NAME);\r\n                                const plantRedlist = plants.find((s) => s.Name === geo.properties.NAME);\r\n                                const fungusRedlist = fungi.find((s) => s.Name === geo.properties.NAME);\r\n                                const chromistRedlist = chromists.find((s) => s.Name === geo.properties.NAME);\r\n                                return (\r\n                                    <Geography\r\n                                        key={geo.rsmKey}\r\n                                        geography={geo}\r\n                                        onMouseEnter={() => {\r\n                                            const { NAME } = geo.properties;\r\n                                            ((deforestation && est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist)\r\n                                                ? setTooltipContent(`${NAME}<br />\r\n                                                                         ------------<br />\r\n                                                                         Species lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\r\n                                                                         Species endangered: ` + ((parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"])) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\r\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />\r\n                                                                         Forest loss: ${deforestation[\"Net-forest-conversion\"]} hectares in ` + year\r\n                                                )\r\n                                                : (!deforestation && est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist)\r\n                                                    ? setTooltipContent(`${NAME}<br />\r\n                                                                         ------------<br />\r\n                                                                         Sepcies lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\r\n                                                                         Species endangered: ` + ((parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"])) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\r\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />                                                                      \r\n                                                                         Forest loss: No data for ` + year\r\n                                                    )\r\n                                                    : (!deforestation && !est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist)\r\n                                                        ? setTooltipContent(`${NAME}<br />\r\n                                                                         ------------<br />\r\n                                                                         Sepcies lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\r\n                                                                         Species endangered: ` + ((parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"])) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\r\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />                                                                      \r\n                                                                         Forest loss: No data for ` + year\r\n                                                        )\r\n                                                        : (!deforestation && !est && animalRedlist && plantRedlist && fungusRedlist && chromistRedlist)\r\n                                                            ? setTooltipContent(`${NAME}<br />\r\n                                                                         ------------<br />\r\n                                                                         Sepcies lost: ` + (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"])) + `<br />\r\n                                                                         Species endangered: ` + ((parseInt(animalRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(plantRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(fungusRedlist[\"Subtotal(threatened spp.)\"]) + parseInt(chromistRedlist[\"Subtotal(threatened spp.)\"])) - (parseInt(animalRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(plantRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(fungusRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]) + parseInt(chromistRedlist[\"Subtotal-(EX+EW+CR(PE)+CR(PEW))\"]))) + ` <br />\r\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />                                                                      \r\n                                                                         Forest loss: No data for ` + year\r\n                                                            )\r\n                                                    : (deforestation && (year.toString() === `2020`))\r\n                                                        ? setTooltipContent(`${NAME}<br />\r\n                                                                         ------------<br />\r\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />\r\n                                                                         Forest loss: ${deforestation[\"Net-forest-conversion\"]} hectares in ` + year\r\n                                                        )\r\n                                                        : (!deforestation && (year.toString() === `2020`))\r\n                                                            ?\r\n                                                            setTooltipContent(`${NAME}<br />\r\n                                                                         ------------<br />\r\n                                                                         Estimated Biodiversity loss: ${est[\"Percent\"]} <br />\r\n                                                                         Forest loss: No data for ` + year\r\n                                                            )\r\n                                                            : (deforestation && (year.toString() !== `2020`)) ?\r\n                                                                setTooltipContent(`${NAME}<br />\r\n                                                                         ------------<br />\r\n                                                                         Biodiversity loss: No biodiversity data for ` + year + ` <br />\r\n                                                                         Forest loss: ${deforestation[\"Net-forest-conversion\"]} hectares`\r\n                                                                )\r\n                                                                : setTooltipContent(`No data found for ${NAME} in ` + year));\r\n                                        }}\r\n                                        onMouseLeave={() => {\r\n                                            setTooltipContent(\"\");\r\n                                        }}\r\n                                        style={{\r\n                                            default: {\r\n                                                fill: \"#D6D6DA\",\r\n                                                outline: \"#000000\",\r\n                                            },\r\n                                            hover: {\r\n                                                fill: \"#F53\",\r\n                                                outline: \"#000000\"\r\n                                            },\r\n                                            pressed: {\r\n                                                fill: \"#E42\",\r\n                                                outline: \"#000000\"\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Geographies>\r\n                </ZoomableGroup>\r\n            </ComposableMap>\r\n            <Box sx={{ width: 1000 }, { ml: 10 }}>\r\n                <Slider\r\n                    onChange={handleChange}\r\n                    track={false}\r\n                    aria-label=\"Restricted values\"\r\n                    defaultValue={100}\r\n                    valueLabelFormat={valueLabelFormat}\r\n                    getAriaValueText={valuetext}\r\n                    step={null}\r\n                    marks={marks}\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(MapChart);"]},"metadata":{},"sourceType":"module"}