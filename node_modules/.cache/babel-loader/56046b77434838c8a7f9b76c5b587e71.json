{"ast":null,"code":"var _jsxFileName = \"/Users/levon/Documents/GitHub/seminar-webpage/src/components/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, memo } from 'react';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { csv } from 'd3-fetch';\nimport { scaleQuantize } from \"d3-scale\";\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\nconst marks = [{\n  value: 10,\n  label: '1990'\n}, {\n  value: 40,\n  label: '2000'\n}, {\n  value: 70,\n  label: '2010'\n}, {\n  value: 85,\n  label: '2015'\n}, {\n  value: 100,\n  label: '2020'\n}];\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nfunction percentRound(dec) {\n  var value = parseInt(dec * 10);\n  if (value < 1) value = 1;else if (value > 10) value = 10;\n  value.toString();\n  return value;\n}\n\nconst colorScale = scaleQuantize().domain([1, 10]).range([\"#a0e295\", \"#8ec984\", \"#7db073\", \"#6b9763\", \"#597e53\", \"#476442\", \"#354b32\", \"#243221\", \"#121910\"]);\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  _s();\n\n  const [deforestation, setDeforestation] = useState([]);\n  const [estimates, setEstimates] = useState([]);\n  const [animals, setAnimals] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [fungi, setFungi] = useState([]);\n  const [chromists, setChromists] = useState([]);\n  const [year, setYear] = useState([`2020`]);\n  useEffect(() => {\n    csv('/annual-change-forest-area.csv').then(deforestation => {\n      setDeforestation(deforestation);\n    });\n    csv('/living-planet-index-by-region.csv').then(estimates => {\n      setEstimates(estimates);\n    });\n    csv('/redlist-animals-by-country.csv').then(animals => {\n      setAnimals(animals);\n    });\n    csv('/redlist-plants-by-country.csv').then(plants => {\n      setPlants(plants);\n    });\n    csv('/redlist-fungi-by-country.csv').then(fungi => {\n      setFungi(fungi);\n    });\n    csv('/redlist-chromists-by-country.csv').then(chromists => {\n      setChromists(chromists);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projectionConfig: {\n        scale: 150\n      },\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          const def = deforestation.find(s => s.ISO3 === geo.properties.ISO_A3 && s.Year == year);\n          const est = estimates.find(s => s.Region === geo.properties.CONTINENT);\n          const animal = animals.find(s => s.Name === geo.properties.NAME);\n          const plant = plants.find(s => s.Name === geo.properties.NAME);\n          const fungus = fungi.find(s => s.Name === geo.properties.NAME);\n          const chromist = chromists.find(s => s.Name === geo.properties.NAME);\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onMouseEnter: () => {\n              const {\n                NAME\n              } = geo.properties;\n              def && est && animal && plant && fungus && chromist ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Species lost: ` + (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)'])) + `<br />\n                                             Endangered Species: ` + (parseInt(animal['Subtotal(threatened spp.)']) + parseInt(plant['Subtotal(threatened spp.)']) + parseInt(fungus['Subtotal(threatened spp.)']) + parseInt(chromist['Subtotal(threatened spp.)']) - (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)']))) + `<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                             Deforestation: ${def['Net-forest-conversion']} hectares in ` + year) : !def && est && animal && plant && fungus && chromist && est['Percent'] != `N/A` ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Species lost: ` + (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)'])) + `<br />\n                                             Endangered Species: ` + (parseInt(animal['Subtotal(threatened spp.)']) + parseInt(plant['Subtotal(threatened spp.)']) + parseInt(fungus['Subtotal(threatened spp.)']) + parseInt(chromist['Subtotal(threatened spp.)']) - (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)']))) + `<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                            `) : !def && est && animal && plant && fungus && chromist ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Species lost: ` + (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)'])) + `<br />\n                                             Endangered Species: ` + (parseInt(animal['Subtotal(threatened spp.)']) + parseInt(plant['Subtotal(threatened spp.)']) + parseInt(fungus['Subtotal(threatened spp.)']) + parseInt(chromist['Subtotal(threatened spp.)']) - (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)']))) + `<br />\n                                            `) : def && est ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                             Deforestation: ${def['Net-forest-conversion']} hectares in ` + year) : !def && est && est['Percent'] == `N/A` ? setTooltipContent(` No data found for ${NAME} in ` + year) : !def && est ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}\n                                           `) : setTooltipContent(`No Data Found for ${NAME} in ` + year);\n            },\n            onMouseLeave: () => {\n              setTooltipContent('');\n            },\n            style: {\n              default: {\n                fill: colorScale(animal && plant && fungus && chromist ? percentRound((parseInt(animal['Subtotal(threatened spp.)']) + parseInt(plant['Subtotal(threatened spp.)']) + parseInt(fungus['Subtotal(threatened spp.)']) + parseInt(chromist['Subtotal(threatened spp.)'])) / (parseInt(animal['Total']) + parseInt(plant['Total']) + parseInt(fungus['Total']) + parseInt(chromist['Total']))) : \"#EEE\"),\n                outline: '#000000'\n              },\n              hover: {\n                fill: '#F53',\n                outline: '#000000'\n              },\n              pressed: {\n                fill: '#E42',\n                outline: '#000000'\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderRadius: 15,\n        backgroundColor: '#D3D3D3',\n        width: '100%',\n        paddingLeft: '3%',\n        paddingRight: '5%',\n        paddingTop: '2%',\n        paddingBottom: '1%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        onChange: (event, value) => setYear((value - 10) / 3 + 1990),\n        track: false,\n        \"aria-label\": \"Restricted values\",\n        defaultValue: 100,\n        valueLabelFormat: valueLabelFormat,\n        getAriaValueText: valuetext,\n        step: null,\n        marks: marks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapChart, \"tkbZR8sdY9nue77Cxi3EjCKgxuw=\");\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/levon/Documents/GitHub/seminar-webpage/src/components/MapChart.js"],"names":["React","useState","useEffect","memo","ZoomableGroup","ComposableMap","Geographies","Geography","csv","scaleQuantize","Box","Slider","geoUrl","marks","value","label","valuetext","valueLabelFormat","findIndex","mark","percentRound","dec","parseInt","toString","colorScale","domain","range","MapChart","setTooltipContent","deforestation","setDeforestation","estimates","setEstimates","animals","setAnimals","plants","setPlants","fungi","setFungi","chromists","setChromists","year","setYear","then","scale","geographies","map","geo","def","find","s","ISO3","properties","ISO_A3","Year","est","Region","CONTINENT","animal","Name","NAME","plant","fungus","chromist","default","fill","outline","hover","pressed","rsmKey","borderRadius","backgroundColor","width","paddingLeft","paddingRight","paddingTop","paddingBottom","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, memo } from 'react'\nimport {\n    ZoomableGroup,\n    ComposableMap,\n    Geographies,\n    Geography\n} from 'react-simple-maps'\nimport { csv } from 'd3-fetch'\nimport { scaleQuantize } from \"d3-scale\";\nimport Box from '@mui/material/Box'\nimport Slider from '@mui/material/Slider'\n\nconst geoUrl =\n    'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json'\n\nconst marks = [\n    {\n        value: 10,\n        label: '1990'\n    },\n    {\n        value: 40,\n        label: '2000'\n    },\n    {\n        value: 70,\n        label: '2010'\n    },\n    {\n        value: 85,\n        label: '2015'\n    },\n    {\n        value: 100,\n        label: '2020'\n    }\n]\n\nfunction valuetext(value) {\n    return `${value}`\n}\n\nfunction valueLabelFormat(value) {\n    return marks.findIndex(mark => mark.value === value) + 1\n}\n\nfunction percentRound(dec) {\n    var value = parseInt(dec * 10);\n    if (value < 1)\n        value = 1;\n    else if (value > 10)\n        value = 10;\n    value.toString();\n    return value;\n}\n\nconst colorScale = scaleQuantize()\n    .domain([1, 10])\n    .range([\n        \"#a0e295\",\n        \"#8ec984\",\n        \"#7db073\",\n        \"#6b9763\",\n        \"#597e53\",\n        \"#476442\",\n        \"#354b32\",\n        \"#243221\",\n        \"#121910\"\n    ]);\n\nconst MapChart = ({ setTooltipContent }) => {\n    const [deforestation, setDeforestation] = useState([])\n    const [estimates, setEstimates] = useState([])\n    const [animals, setAnimals] = useState([])\n    const [plants, setPlants] = useState([])\n    const [fungi, setFungi] = useState([])\n    const [chromists, setChromists] = useState([])\n    const [year, setYear] = useState([`2020`])\n\n    useEffect(() => {\n        csv('/annual-change-forest-area.csv').then(deforestation => {\n            setDeforestation(deforestation)\n        })\n        csv('/living-planet-index-by-region.csv').then(estimates => {\n            setEstimates(estimates)\n        })\n        csv('/redlist-animals-by-country.csv').then(animals => {\n            setAnimals(animals)\n        })\n        csv('/redlist-plants-by-country.csv').then(plants => {\n            setPlants(plants)\n        })\n        csv('/redlist-fungi-by-country.csv').then(fungi => {\n            setFungi(fungi)\n        })\n        csv('/redlist-chromists-by-country.csv').then(chromists => {\n            setChromists(chromists)\n        })\n    }, [])\n\n    return (\n        <>\n            <ComposableMap data-tip='' projectionConfig={{ scale: 150 }}>\n                {/*      <ZoomableGroup*/}\n                {/*  translateExtent={[*/}\n                {/*    [-75, 30],*/}\n                {/*    [950, 600]*/}\n                {/*  ]}*/}\n                {/*>*/}\n                <Geographies geography={geoUrl}>\n                    {({ geographies }) =>\n                        geographies.map(geo => {\n                            const def = deforestation.find(s => s.ISO3 === geo.properties.ISO_A3 && s.Year == year);\n                            const est = estimates.find(s => s.Region === geo.properties.CONTINENT);\n                            const animal = animals.find(s => s.Name === geo.properties.NAME);\n                            const plant = plants.find(s => s.Name === geo.properties.NAME);\n                            const fungus = fungi.find(s => s.Name === geo.properties.NAME);\n                            const chromist = chromists.find(s => s.Name === geo.properties.NAME);\n                            return (\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    onMouseEnter={() => {\n                                        const { NAME } = geo.properties;\n                                        (def && est && animal && plant && fungus && chromist)\n                                            ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Species lost: ` +\n                                                (parseInt(animal['Subtotal-(EX+EW)']) +\n                                                    parseInt(plant['Subtotal-(EX+EW)']) +\n                                                    parseInt(fungus['Subtotal-(EX+EW)']) +\n                                                    parseInt(chromist['Subtotal-(EX+EW)'])) +\n                                                `<br />\n                                             Endangered Species: ` +\n                                                (parseInt(animal['Subtotal(threatened spp.)']) +\n                                                    parseInt(plant['Subtotal(threatened spp.)']) +\n                                                    parseInt(fungus['Subtotal(threatened spp.)']) +\n                                                    parseInt(chromist['Subtotal(threatened spp.)']) -\n                                                    (parseInt(animal['Subtotal-(EX+EW)']) +\n                                                        parseInt(plant['Subtotal-(EX+EW)']) +\n                                                        parseInt(fungus['Subtotal-(EX+EW)']) +\n                                                        parseInt(chromist['Subtotal-(EX+EW)']))) +\n                                                `<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                             Deforestation: ${def['Net-forest-conversion']} hectares in ` + year\n                                            )\n                                            : (!def && est && animal && plant && fungus && chromist && est['Percent'] != `N/A`)\n                                                ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Species lost: ` +\n                                                    (parseInt(animal['Subtotal-(EX+EW)']) +\n                                                        parseInt(plant['Subtotal-(EX+EW)']) +\n                                                        parseInt(fungus['Subtotal-(EX+EW)']) +\n                                                        parseInt(chromist['Subtotal-(EX+EW)'])) +\n                                                    `<br />\n                                             Endangered Species: ` +\n                                                    (parseInt(animal['Subtotal(threatened spp.)']) +\n                                                        parseInt(plant['Subtotal(threatened spp.)']) +\n                                                        parseInt(fungus['Subtotal(threatened spp.)']) +\n                                                        parseInt(chromist['Subtotal(threatened spp.)']) -\n                                                        (parseInt(animal['Subtotal-(EX+EW)']) +\n                                                            parseInt(plant['Subtotal-(EX+EW)']) +\n                                                            parseInt(fungus['Subtotal-(EX+EW)']) +\n                                                            parseInt(chromist['Subtotal-(EX+EW)']))) +\n                                                    `<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                            `)\n                                                : (!def && est && animal && plant && fungus && chromist)\n                                                    ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Species lost: ` +\n                                                        (parseInt(animal['Subtotal-(EX+EW)']) +\n                                                            parseInt(plant['Subtotal-(EX+EW)']) +\n                                                            parseInt(fungus['Subtotal-(EX+EW)']) +\n                                                            parseInt(chromist['Subtotal-(EX+EW)'])) +\n                                                        `<br />\n                                             Endangered Species: ` +\n                                                        (parseInt(animal['Subtotal(threatened spp.)']) +\n                                                            parseInt(plant['Subtotal(threatened spp.)']) +\n                                                            parseInt(fungus['Subtotal(threatened spp.)']) +\n                                                            parseInt(chromist['Subtotal(threatened spp.)']) -\n                                                            (parseInt(animal['Subtotal-(EX+EW)']) +\n                                                                parseInt(plant['Subtotal-(EX+EW)']) +\n                                                                parseInt(fungus['Subtotal-(EX+EW)']) +\n                                                                parseInt(chromist['Subtotal-(EX+EW)']))) +\n                                                        `<br />\n                                            `)\n                                                    : (def && est)\n                                                        ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                             Deforestation: ${def['Net-forest-conversion']} hectares in ` + year\n                                                        )\n                                                        : (!def && est && est['Percent'] == `N/A`)\n                                                            ? setTooltipContent(` No data found for ${NAME} in ` + year)\n                                                            : (!def && est)\n                                                                ? setTooltipContent(`${NAME}<br />\n                                             ----------------<br />\n                                             Estimated Biodiversity Loss Over Time: ${est['Percent']}\n                                           `)\n                                                                : setTooltipContent(`No Data Found for ${NAME} in ` + year)\n                                    }}\n                                    onMouseLeave={() => {\n                                        setTooltipContent('')\n                                    }}\n                                    style={{\n                                        default: {\n                                            fill: colorScale(((animal && plant && fungus && chromist) ?\n                                                (percentRound(((parseInt(animal['Subtotal(threatened spp.)']) +\n                                                    parseInt(plant['Subtotal(threatened spp.)']) +\n                                                    parseInt(fungus['Subtotal(threatened spp.)']) +\n                                                    parseInt(chromist['Subtotal(threatened spp.)']))\n                                                    /\n                                                    (parseInt(animal['Total']) +\n                                                        parseInt(plant['Total']) +\n                                                        parseInt(fungus['Total']) +\n                                                        parseInt(chromist['Total'])))\n                                                )) : \"#EEE\")),\n                                            outline: '#000000'\n                                        },\n                                        hover: {\n                                            fill: '#F53',\n                                            outline: '#000000'\n                                        },\n                                        pressed: {\n                                            fill: '#E42',\n                                            outline: '#000000'\n                                        }\n                                    }}\n                                />\n                            )\n                        })\n                    }\n                </Geographies>\n                {/*</ZoomableGroup>*/}\n            </ComposableMap>\n\n            <div style={{ borderRadius: 15, backgroundColor: '#D3D3D3', width: '100%', paddingLeft: '3%', paddingRight: '5%', paddingTop: '2%', paddingBottom: '1%' }}>\n                <Slider\n                    onChange={(event, value) => setYear((value - 10) / 3 + 1990)}\n                    track={false}\n                    aria-label='Restricted values'\n                    defaultValue={100}\n                    valueLabelFormat={valueLabelFormat}\n                    getAriaValueText={valuetext}\n                    step={null}\n                    marks={marks}\n                />\n            </div>\n\n        </>\n    )\n}\n\nexport default memo(MapChart)\n"]},"metadata":{},"sourceType":"module"}