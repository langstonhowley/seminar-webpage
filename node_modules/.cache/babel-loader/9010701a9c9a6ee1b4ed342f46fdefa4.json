{"ast":null,"code":"var _jsxFileName = \"/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, memo } from 'react';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { csv } from 'd3-fetch';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = 'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\nconst marks = [{\n  value: 10,\n  label: '1990'\n}, {\n  value: 40,\n  label: '2000'\n}, {\n  value: 70,\n  label: '2010'\n}, {\n  value: 85,\n  label: '2015'\n}, {\n  value: 100,\n  label: '2020'\n}];\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nfunction valueLabelFormat(value) {\n  return marks.findIndex(mark => mark.value === value) + 1;\n}\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  _s();\n\n  const [deforestation, setDeforestation] = useState([]);\n  const [estimates, setEstimates] = useState([]);\n  const [animals, setAnimals] = useState([]);\n  const [plants, setPlants] = useState([]);\n  const [fungi, setFungi] = useState([]);\n  const [chromists, setChromists] = useState([]);\n  const [year, setYear] = useState([`2020`]);\n  useEffect(() => {\n    csv('/annual-change-forest-area.csv').then(deforestation => {\n      setDeforestation(deforestation);\n    });\n    csv('/living-planet-index-by-region.csv').then(estimates => {\n      setEstimates(estimates);\n    });\n    csv('/redlist-animals-by-country.csv').then(animals => {\n      setAnimals(animals);\n    });\n    csv('/redlist-plants-by-country.csv').then(plants => {\n      setPlants(plants);\n    });\n    csv('/redlist-fungi-by-country.csv').then(fungi => {\n      setFungi(fungi);\n    });\n    csv('/redlist-chromists-by-country.csv').then(chromists => {\n      setChromists(chromists);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projectionConfig: {\n        scale: 150\n      },\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        translateExtent: [[-75, 30], [950, 600]],\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            const def = deforestation.find(s => s.ISO3 === geo.properties.ISO_A3 && s.Year == year);\n            const est = estimates.find(s => s.Region === geo.properties.CONTINENT);\n            const animal = animals.find(s => s.Name === geo.properties.NAME);\n            const plant = plants.find(s => s.Name === geo.properties.NAME);\n            const fungus = fungi.find(s => s.Name === geo.properties.NAME);\n            const chromist = chromists.find(s => s.Name === geo.properties.NAME);\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              onMouseEnter: () => {\n                const {\n                  NAME\n                } = geo.properties;\n                def && est && animal && plant && fungus && chromist ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` + (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)'])) + `<br />\n                                                                      Endangered Species: ` + (parseInt(animal['Subtotal(threatened spp.)']) + parseInt(plant['Subtotal(threatened spp.)']) + parseInt(fungus['Subtotal(threatened spp.)']) + parseInt(chromist['Subtotal(threatened spp.)']) - (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)']))) + `<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                                      Deforestation: ${def['Net-forest-conversion']} hectares\n                                                `) : !def && est && animal && plant && fungus && chromist && est['Percent'] != `N/A` ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` + (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)'])) + `<br />\n                                                                      Endangered Species: ` + (parseInt(animal['Subtotal(threatened spp.)']) + parseInt(plant['Subtotal(threatened spp.)']) + parseInt(fungus['Subtotal(threatened spp.)']) + parseInt(chromist['Subtotal(threatened spp.)']) - (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)']))) + `<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                `) : !def && est && animal && plant && fungus && chromist ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` + (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)'])) + `<br />\n                                                                      Endangered Species: ` + (parseInt(animal['Subtotal(threatened spp.)']) + parseInt(plant['Subtotal(threatened spp.)']) + parseInt(fungus['Subtotal(threatened spp.)']) + parseInt(chromist['Subtotal(threatened spp.)']) - (parseInt(animal['Subtotal-(EX+EW)']) + parseInt(plant['Subtotal-(EX+EW)']) + parseInt(fungus['Subtotal-(EX+EW)']) + parseInt(chromist['Subtotal-(EX+EW)']))) + `<br />\n                                                `) : def && est ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                                      Deforestation: ${def['Net-forest-conversion']} hectares\n                                                `) : !def && est && est['Percent'] == `N/A` ? setTooltipContent(`\n                                                                      No data found for ${NAME} in ` + year) : !def && est ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}\n                                                `) : setTooltipContent(`No Data Found for ${NAME} in ` + year);\n              },\n              onMouseLeave: () => {\n                setTooltipContent('');\n              },\n              style: {\n                default: {\n                  fill: '#D6D6DA',\n                  outline: '#000000'\n                },\n                hover: {\n                  fill: '#F53',\n                  outline: '#000000'\n                },\n                pressed: {\n                  fill: '#E42',\n                  outline: '#000000'\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: ({\n        width: 750\n      }, {\n        ml: 10\n      }),\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        onChange: (event, value) => setYear((value - 10) / 3 + 1990),\n        track: false,\n        \"aria-label\": \"Restricted values\",\n        defaultValue: 100,\n        valueLabelFormat: valueLabelFormat,\n        getAriaValueText: valuetext,\n        step: null,\n        marks: marks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MapChart, \"tkbZR8sdY9nue77Cxi3EjCKgxuw=\");\n\n_c = MapChart;\nexport default _c2 = /*#__PURE__*/memo(MapChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/langston/Desktop/everything/Compsci/seminar-webpage/src/components/MapChart.js"],"names":["React","useState","useEffect","memo","ZoomableGroup","ComposableMap","Geographies","Geography","csv","Box","Slider","geoUrl","marks","value","label","valuetext","valueLabelFormat","findIndex","mark","MapChart","setTooltipContent","deforestation","setDeforestation","estimates","setEstimates","animals","setAnimals","plants","setPlants","fungi","setFungi","chromists","setChromists","year","setYear","then","scale","geographies","map","geo","def","find","s","ISO3","properties","ISO_A3","Year","est","Region","CONTINENT","animal","Name","NAME","plant","fungus","chromist","parseInt","default","fill","outline","hover","pressed","rsmKey","width","ml","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, memo } from 'react'\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography\n} from 'react-simple-maps'\nimport { csv } from 'd3-fetch'\nimport Box from '@mui/material/Box'\nimport Slider from '@mui/material/Slider'\n\nconst geoUrl =\n  'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json'\n\nconst marks = [\n  {\n    value: 10,\n    label: '1990'\n  },\n  {\n    value: 40,\n    label: '2000'\n  },\n  {\n    value: 70,\n    label: '2010'\n  },\n  {\n    value: 85,\n    label: '2015'\n  },\n  {\n    value: 100,\n    label: '2020'\n  }\n]\n\nfunction valuetext (value) {\n  return `${value}`\n}\n\nfunction valueLabelFormat (value) {\n  return marks.findIndex(mark => mark.value === value) + 1\n}\n\nconst MapChart = ({ setTooltipContent }) => {\n  const [deforestation, setDeforestation] = useState([])\n  const [estimates, setEstimates] = useState([])\n  const [animals, setAnimals] = useState([])\n  const [plants, setPlants] = useState([])\n  const [fungi, setFungi] = useState([])\n  const [chromists, setChromists] = useState([])\n  const [year, setYear] = useState([`2020`])\n\n  useEffect(() => {\n    csv('/annual-change-forest-area.csv').then(deforestation => {\n      setDeforestation(deforestation)\n    })\n    csv('/living-planet-index-by-region.csv').then(estimates => {\n      setEstimates(estimates)\n    })\n    csv('/redlist-animals-by-country.csv').then(animals => {\n      setAnimals(animals)\n    })\n    csv('/redlist-plants-by-country.csv').then(plants => {\n      setPlants(plants)\n    })\n    csv('/redlist-fungi-by-country.csv').then(fungi => {\n      setFungi(fungi)\n    })\n    csv('/redlist-chromists-by-country.csv').then(chromists => {\n      setChromists(chromists)\n    })\n  }, [])\n\n  return (\n    <>\n      <ComposableMap data-tip='' projectionConfig={{ scale: 150 }}>\n        <ZoomableGroup\n          translateExtent={[\n            [-75, 30],\n            [950, 600]\n          ]}\n        >\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => {\n                const def = deforestation.find(\n                  s => s.ISO3 === geo.properties.ISO_A3 && s.Year == year\n                )\n                const est = estimates.find(\n                  s => s.Region === geo.properties.CONTINENT\n                )\n                const animal = animals.find(s => s.Name === geo.properties.NAME)\n                const plant = plants.find(s => s.Name === geo.properties.NAME)\n                const fungus = fungi.find(s => s.Name === geo.properties.NAME)\n                const chromist = chromists.find(\n                  s => s.Name === geo.properties.NAME\n                )\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      const { NAME } = geo.properties\n                      def && est && animal && plant && fungus && chromist\n                        ? setTooltipContent(\n                            `${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` +\n                              (parseInt(animal['Subtotal-(EX+EW)']) +\n                                parseInt(plant['Subtotal-(EX+EW)']) +\n                                parseInt(fungus['Subtotal-(EX+EW)']) +\n                                parseInt(chromist['Subtotal-(EX+EW)'])) +\n                              `<br />\n                                                                      Endangered Species: ` +\n                              (parseInt(animal['Subtotal(threatened spp.)']) +\n                                parseInt(plant['Subtotal(threatened spp.)']) +\n                                parseInt(fungus['Subtotal(threatened spp.)']) +\n                                parseInt(\n                                  chromist['Subtotal(threatened spp.)']\n                                ) -\n                                (parseInt(animal['Subtotal-(EX+EW)']) +\n                                  parseInt(plant['Subtotal-(EX+EW)']) +\n                                  parseInt(fungus['Subtotal-(EX+EW)']) +\n                                  parseInt(chromist['Subtotal-(EX+EW)']))) +\n                              `<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                                      Deforestation: ${def['Net-forest-conversion']} hectares\n                                                `\n                          )\n                        : !def &&\n                          est &&\n                          animal &&\n                          plant &&\n                          fungus &&\n                          chromist &&\n                          est['Percent'] != `N/A`\n                        ? setTooltipContent(\n                            `${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` +\n                              (parseInt(animal['Subtotal-(EX+EW)']) +\n                                parseInt(plant['Subtotal-(EX+EW)']) +\n                                parseInt(fungus['Subtotal-(EX+EW)']) +\n                                parseInt(chromist['Subtotal-(EX+EW)'])) +\n                              `<br />\n                                                                      Endangered Species: ` +\n                              (parseInt(animal['Subtotal(threatened spp.)']) +\n                                parseInt(plant['Subtotal(threatened spp.)']) +\n                                parseInt(fungus['Subtotal(threatened spp.)']) +\n                                parseInt(\n                                  chromist['Subtotal(threatened spp.)']\n                                ) -\n                                (parseInt(animal['Subtotal-(EX+EW)']) +\n                                  parseInt(plant['Subtotal-(EX+EW)']) +\n                                  parseInt(fungus['Subtotal-(EX+EW)']) +\n                                  parseInt(chromist['Subtotal-(EX+EW)']))) +\n                              `<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                `\n                          )\n                        : !def && est && animal && plant && fungus && chromist\n                        ? setTooltipContent(\n                            `${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Species lost: ` +\n                              (parseInt(animal['Subtotal-(EX+EW)']) +\n                                parseInt(plant['Subtotal-(EX+EW)']) +\n                                parseInt(fungus['Subtotal-(EX+EW)']) +\n                                parseInt(chromist['Subtotal-(EX+EW)'])) +\n                              `<br />\n                                                                      Endangered Species: ` +\n                              (parseInt(animal['Subtotal(threatened spp.)']) +\n                                parseInt(plant['Subtotal(threatened spp.)']) +\n                                parseInt(fungus['Subtotal(threatened spp.)']) +\n                                parseInt(\n                                  chromist['Subtotal(threatened spp.)']\n                                ) -\n                                (parseInt(animal['Subtotal-(EX+EW)']) +\n                                  parseInt(plant['Subtotal-(EX+EW)']) +\n                                  parseInt(fungus['Subtotal-(EX+EW)']) +\n                                  parseInt(chromist['Subtotal-(EX+EW)']))) +\n                              `<br />\n                                                `\n                          )\n                        : def && est\n                        ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}<br />\n                                                                      Deforestation: ${def['Net-forest-conversion']} hectares\n                                                `)\n                        : !def && est && est['Percent'] == `N/A`\n                        ? setTooltipContent(\n                            `\n                                                                      No data found for ${NAME} in ` +\n                              year\n                          )\n                        : !def && est\n                        ? setTooltipContent(`${NAME}          <br />\n                                                                      ----------------<br />\n                                                                      Estimated Biodiversity Loss Over Time: ${est['Percent']}\n                                                `)\n                        : setTooltipContent(\n                            `No Data Found for ${NAME} in ` + year\n                          )\n                    }}\n                    onMouseLeave={() => {\n                      setTooltipContent('')\n                    }}\n                    style={{\n                      default: {\n                        fill: '#D6D6DA',\n                        outline: '#000000'\n                      },\n                      hover: {\n                        fill: '#F53',\n                        outline: '#000000'\n                      },\n                      pressed: {\n                        fill: '#E42',\n                        outline: '#000000'\n                      }\n                    }}\n                  />\n                )\n              })\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n      <Box sx={({ width: 750 }, { ml: 10 })}>\n        <Slider\n          onChange={(event, value) => setYear((value - 10) / 3 + 1990)}\n          track={false}\n          aria-label='Restricted values'\n          defaultValue={100}\n          valueLabelFormat={valueLabelFormat}\n          getAriaValueText={valuetext}\n          step={null}\n          marks={marks}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default memo(MapChart)\n"]},"metadata":{},"sourceType":"module"}